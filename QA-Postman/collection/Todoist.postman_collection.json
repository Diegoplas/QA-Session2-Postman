{
	"info": {
		"_postman_id": "b568fcbf-9bad-4e41-9442-5f45c11b84a1",
		"name": "Todoist",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Project",
			"item": [
				{
					"name": "Create New Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.environment.get(\"projectName\");\r",
									"pm.test(\"Project Name is Correct\", function () {\r",
									"    pm.expect(jsonData.name).to.eql(name);\r",
									"});\r",
									"\r",
									"pm.environment.set(\"projectID\", jsonData.id);\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Requested-Id",
								"value": "$(uuidgen)",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{projectName}}\"\r\n}"
						},
						"url": {
							"raw": "{{baseURL}}/projects",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a New Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"taskID1\", jsonData.id);\r",
									"\r",
									"var task_name = pm.environment.get(\"task1\");\r",
									"\r",
									"pm.test(\"Task Content is Correct\", function () {\r",
									"    pm.expect(jsonData.content).to.eql(task_name);\r",
									"});\r",
									"\r",
									"pm.test(\"Task Content does Not match.\", function () {\r",
									"    pm.expect(jsonData.content).not.eql(task_name);\r",
									"});\r",
									"\r",
									"pm.test(\"Check if Content-Type is JSON\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.response.to.be.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Requested-Id",
								"value": "$(uuidgen)",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"content\": \"{{task1}}\", \r\n    \"project_id\": {{projectID}},\r\n    \"due_string\": \"tomorrow\"\r\n}"
						},
						"url": {
							"raw": "{{baseURL}}/tasks",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Requested-Id",
								"value": "$(uuidgen)",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"content\": \"{{updatedTask1}}\",\r\n    \"due_string\": \"tomorrow\"\r\n}"
						},
						"url": {
							"raw": "{{baseURL}}/tasks/{{taskID1}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"tasks",
								"{{taskID1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Active Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"var jsonData = pm.response.json();\r",
									"var task_id = pm.environment.get(\"taskID1\");\r",
									"pm.test(\"Task ID is Correct\", function () {\r",
									"    pm.expect(jsonData.id).to.eql(task_id);\r",
									"});\r",
									"\r",
									"pm.test(\"Retrieved task does not correspond to the given ID\", function () {\r",
									"    pm.expect(jsonData.id).not.eql(task_id);\r",
									"});\r",
									"\r",
									"pm.test(\"Check if Content-Type is JSON\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.response.to.be.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Requested-Id",
								"value": "$(uuidgen)",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}/tasks/{{taskID1}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"tasks",
								"{{taskID1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Active Tasks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check if Content-Type is JSON\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.response.to.be.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is More than 400ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.above(400);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Requested-Id",
								"value": "$(uuidgen)",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}/tasks",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change Status to Complete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Task to Complete does Not exist.\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Requested-Id",
								"value": "$(uuidgen)",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/tasks/{{taskID1}}/close",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"tasks",
								"{{taskID1}}",
								"close"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reopen a Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Task to reopen did not existed or was deleted.\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Requested-Id",
								"value": "$(uuidgen)",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}/tasks/{{taskID1}}/reopen",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"tasks",
								"{{taskID1}}",
								"reopen"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Task to Delete does Not exist.\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Requested-Id",
								"value": "$(uuidgen)",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}/tasks/{{taskID1}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"tasks",
								"{{taskID1}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Status code is 2xx\", function () {",
					"    pm.response.to.be.success;",
					"});",
					"",
					"pm.test(\"Response time is less than 400ms\", function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(400);",
					"});",
					"",
					""
				]
			}
		}
	]
}